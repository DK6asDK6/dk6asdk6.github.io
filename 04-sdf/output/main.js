!function(){"use strict";const t=1e6;function e(t,e,l,h){return(e+t*t-(h+l*l))/(2*t-2*l)}function l(l,h,i){let o=[],r=[],n=0;for(let e=0;e<i;e++){let n=l[h*i+e];n<t&&(o.push(e),r.push(n))}let f=o.length;if(0!=f){for(let t=0;t<f-2;t++){let l=e(o[t],r[t],o[t+2],r[t+2]),h=r[t+1]+(l-o[t+1])*(l-o[t+1]);r[t]+(l-o[t])*(l-o[t])<=h&&(o.splice(t+1,1),r.splice(t+1,1),f--,t=0)}for(let e=0;e<i;e++)l[e+h*i]=t;for(let t=0;t<f-1;t++){let f=Math.round(e(o[t],r[t],o[t+1],r[t+1]));for(let e=Math.max(n,0);e<i&&e<f;e++)l[h*i+e]=r[t]+(e-o[t])*(e-o[t]);n=f}for(let t=n;t<i;t++)l[h*i+t]=r[f-1]+(t-o[f-1])*(t-o[f-1])}}function h(t,e,l){let h=[];for(let i=0;i<l;i++)for(let o=0;o<e;o++){h[(e-1-o)*l+i]=t[i*e+o]}return h}!function(){let e,i=new Image,o=[],r=[],n=[];i.onload=function(){let f=document.getElementById("canvas");f.width=i.width,f.height=i.height,e=f.getContext("2d");let a=document.getElementById("result");a.width=i.width,a.height=i.height;let g=a.getContext("2d");e.globalCompositeOperation="hard-light",e.drawImage(i,0,0);let d=Array.from(e.getImageData(0,0,i.width,i.height).data);for(let t=0;t<d.length;t+=4)d[t]+d[t+1]+d[t+2]>300?o.push(1):o.push(0);for(let t=0;t<o.length;t++)1==o[t]?e.fillStyle="rgba(255, 255, 255, 1)":e.fillStyle="rgba(0, 0, 0, 1)",e.fillRect(Math.floor(t%i.width),Math.floor(t/i.width),1,1);for(let e=0;e<o.length;e++)1==o[e]?n.push(0):n.push(t);for(let t=0;t<i.height;t++)l(n,t,i.width);r=h(n,i.width,i.height);for(let t=0;t<i.width;t++)l(r,t,i.height);n=h(r,i.height,i.width);for(let t=0;t<n.length;t++){let e=20*Math.floor(Math.min(Math.sqrt(n[t]),255));g.fillStyle=`rgba(${e}, ${e}, ${e}, 1)`,g.fillRect(Math.floor(t%i.width),Math.floor(t/i.width),1,1)}};let f=document.getElementById("img");f.addEventListener("change",(()=>{i.src=URL.createObjectURL(f.files[0]),o=[],r=[],n=[]}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
