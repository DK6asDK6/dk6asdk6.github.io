!function(){"use strict";const t=1e6;function e(t,e,l,h){return(e+t*t-(h+l*l))/(2*t-2*l)}function l(l,h,i){let o=[],n=[],r=0;for(let e=0;e<i;e++){let r=l[h*i+e];r<t&&(o.push(e),n.push(r))}let f=o.length;if(0!=f){for(let t=0;t<f-2;t++){let l=e(o[t],n[t],o[t+2],n[t+2]),h=n[t+1]+(l-o[t+1])*(l-o[t+1]);n[t]+(l-o[t])*(l-o[t])<=h&&(o.splice(t+1,1),n.splice(t+1,1),f--,t=0)}for(let e=0;e<i;e++)l[e+h*i]=t;for(let t=0;t<f-1;t++){let f=Math.round(e(o[t],n[t],o[t+1],n[t+1]));for(let e=Math.max(r,0);e<i&&e<f;e++)l[h*i+e]=n[t]+(e-o[t])*(e-o[t]);r=f}for(let t=r;t<i;t++)l[h*i+t]=n[f-1]+(t-o[f-1])*(t-o[f-1])}}function h(t,e,l){let h=[];for(let i=0;i<l;i++)for(let o=0;o<e;o++){h[(e-1-o)*l+i]=t[i*e+o]}return h}!function(){let e,i=new Image,o=[],n=[],r=[];i.onload=function(){let f=document.getElementById("canvas");f.width=i.width,f.height=i.height,e=f.getContext("2d");let g=document.getElementById("result");g.width=i.width,g.height=i.height;let a=g.getContext("2d");e.globalCompositeOperation="hard-light",e.drawImage(i,0,0);let d=Array.from(e.getImageData(0,0,i.width,i.height).data);for(let t=0;t<d.length;t+=4)o.push(d[t]+d[t+1]+d[t+2]<=300);for(let t=0;t<o.length;t++)0==o[t]?e.fillStyle="rgba(255, 255, 255, 1)":e.fillStyle="rgba(0, 0, 0, 1)",e.fillRect(Math.floor(t%i.width),Math.floor(t/i.width),1,1);for(let e=0;e<o.length;e++)1==o[e]?r.push(0):r.push(t);for(let t=0;t<i.height;t++)l(r,t,i.width);n=h(r,i.width,i.height);for(let t=0;t<i.width;t++)l(n,t,i.height);r=h(n,i.height,i.width);for(let t=0;t<r.length;t++){let e=20*Math.floor(Math.min(Math.sqrt(r[t]),255));a.fillStyle=`rgba(${e}, ${e}, ${e}, 1)`,a.fillRect(Math.floor((r.length-1-t)%i.width),Math.floor((r.length-1-t)/i.width),1,1)}};let f=document.getElementById("img");f.addEventListener("change",(()=>{i.src=URL.createObjectURL(f.files[0]),o=[],n=[],r=[]}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
